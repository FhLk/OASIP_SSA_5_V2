upstream frontEnd{
    server frontEnd:3000;
}

upstream backEnd{
    server backEnd:8080;
}

server {
    
    listen 443 ssl;
    server_name http://intproj21.sit.kmutt.ac.th/ssa5/;

        ssl on; 
    ssl_certificate /etc/nginx/ssl/ip21ssa5.crt; 
    ssl_certificate_key /etc/nginx/ssl/ip21ssa5.key; 
    
    ssl_session_cache shared:SSL:1m;
    ssl_session_timeout 5m;

     ssl_protocols SSLv2 SSLv3 TLSv1.2;
     ssl_ciphers HIGH:!aNULL:!MD5; 
     ssl_prefer_server_ciphers on;
     client_max_body_size 10M;

    location / {
        proxy_pass http://frontEnd;
        client_max_body_size 10M;
    }

    location /api {
        proxy_pass http://backEnd;
        client_max_body_size 10M;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}

server{ 
    listen 80;
    server_name http://intproj21.sit.kmutt.ac.th/ssa5/;
    client_max_body_size 10M;   
    location /{
    return 301 https://intproj21.sit.kmutt.ac.th/ssa5$request_uri;   
    }
}

# server {      #Monitor port 443
#     listen    443 ssl;
#     server_name ip21ssa5.sit.kmutt.ac.th;             #domain name

#     # Add ssl
#     ssl on;        #If you force HTTP access, this line should be opened
#     ssl_certificate /ssl/ip21ssa5.crt;   #The crt file storage path of nginx for ssl certificate of domain name application
#     ssl_certificate_key /ssl/ip21ssa5.key;      #Storage path of nginx key file of ssl certificate for domain name application

#     ssl_session_cache    shared:SSL:1m;
#     ssl_session_timeout  5m;

#      # Specify the password as a format supported by openssl
#      ssl_protocols  SSLv2 SSLv3 TLSv1.2;

#      ssl_ciphers  HIGH:!aNULL:!MD5;  # Password encryption method
#      ssl_prefer_server_ciphers  on;   # Server passwords that rely on SSLv3 and TLSv1 protocols will take precedence over client passwords

#      # Define the index directory and name of the first page        
#      location / {
#         root   /usr/share/nginx/html;
#         index  index.html index.htm;
#      }

#     location /api {
#         proxy_pass http://oasipBackEnd:8080/api;
#     }

#     #Redirect error page to / 50x.html
#     error_page   500 502 503 504  /50x.html;
#     location = /50x.html {
#         root   /usr/share/nginx/html;
#     }
# }
# server{   #Monitor port 80
# 	listen 80;
#     	server_name ip21ssa5.sit.kmutt.ac.th; 
#     	rewrite ^(.*) https://$host$1 permanent;      # All connections that arrive here are converted to https
# }